\documentclass[a4paper]{article}
\usepackage{Rd}
\usepackage{amsmath}
\usepackage[round]{natbib}
\usepackage{bm}
\usepackage{verbatim}
\usepackage[latin1]{inputenc}
\bibliographystyle{abbrvnat}
\usepackage{url}

\let\proglang=\textsf
\renewcommand{\topfraction}{0.85}
\renewcommand{\textfraction}{0.1}
\renewcommand{\baselinestretch}{1.5}
\setlength{\textwidth}{15cm} \setlength{\textheight}{22cm} \topmargin-1cm \evensidemargin0.5cm \oddsidemargin0.5cm

\usepackage{lmodern}
\usepackage[T1]{fontenc}

% \VignetteIndexEntry{Estimating Risk and Performance measures using FMMC in factorAnalytics}
%\VignetteEngine{knitr::knitr}

\begin{document}
\title{Estimating Risk and Performance measures using FMMC: factorAnalytics vignette}
\author{Rohit Arora}
\maketitle

\begin{abstract}
The purpose of this vignette is to demonstrate the use of \code{fmmc} and related function \code{fmmc.estimate.se} in the \code{factorAnalytics} package.
\end{abstract}

\tableofcontents
\bigskip

\newpage
\section{Overview}

\subsection{Load Package}

The latest version of the \verb"factorAnalytics" package can be downloaded from R-forge through the following command:
\begin{verbatim}
install.packages("factorAnalytics", repos="http://R-Forge.R-project.org")
\end{verbatim}
Load the package and it's dependencies.
<<message=FALSE>>=
library(factorAnalytics)
options(digits=3)
@

\subsection{Summary of related functions}
Here's a list of the functions and methods demonstrated in this vignette:
\begin{itemize}

\item \verb"fmmc(R, factors, parallel=FALSE, ...)": Compute fmmc objects that 
can be used for calcuation of estimates and their standard errors using the 
Factor Model Monte Carlo methodology as described in \citet{Jiang2013}. 
These fmmc objects can then be reused to compute different risk and performance
estimates along with their standard errors.

item \verb"fmmc.estimate.se(fmmcObjs, fun=NULL, se=FALSE, nboot=100, parallel = FALSE) ": 
Compute risk and performance estimates along with thier standard errors using the fmmc objects.

\end{itemize}

\subsection{Data}

The following examples primarily use the \code{managers} dataset from the \verb"PerformanceAnalytics" package. It's an "xts" data object with 132 observations on 10 variables; frequency is monthly. 
<<>>=
data(managers)
colnames(managers)
range(index(managers))
@ 

In the example below we will compute expected shortfall for the monthly returns of 3
managers, HAM2, HAM5, and HAM6 using returns from HAM3, returns on S\&P500, returns on 3M and 10Y treasury. Notice that managers  HAM2, HAM5, and HAM6 have missing return history at the begining.

<<>>=
sub.data <- managers[,c(2, 5, 6),drop=FALSE]
head(sub.data)
factors.data  <- managers[,c(3, 8, 9, 10),drop=FALSE]
@

\section{Fit an FMMC object to the data}
Let's take a look at the arguments for \code{fmmc}.

<<tidy=TRUE>>=
args(fmmc)
@

Given a matrix of returns and factors data one can choose to parallelize the 
computation of fmmc objects. Additional arguments can be passed to \code{fitTsfm}  
such as variable.selection or fit.method. The default value for variable selection
is "subsets" and fit,method is defaulted to "LS". The default criteria for model
selection is "BIC". Additional arguments can be passed to \code{fitTsfm}.

<<>>=
objs <- fmmc(sub.data, factors.data, parallel=FALSE, variable.selection="subsets")
@

\section{Use FMMC objects to compute risk and performance estimates}

Our goal is to compute expected shortfall to the returns data with missing history without discarding any factor data. We will compute expected shortfall in this example. We
will define a function to compute es and bind the significance at 5%. 

<<>>=
es <- function(r, alpha = 0.05) {
    r <- sort(r)
    cutoff <- ifelse( alpha == 0, 1, round(alpha*length(r)))
    -1/cutoff * sum(r[which((1:length(r)) < cutoff)])
}
@

We will pass this function along with the previously computed fmmc object to
compute the estimate and the standard error using \code{fmmc.estimate.se}. Since
computation of standard error for multiple returns can be time consuming one can 
choose to parallelize and utilize all the CPU cores. However, but default the 
option to parallelize is turned off.

<<>>=
result <- fmmc.estimate.se(objs, fun = es, se= TRUE, nboot = 50, 
                           parallel = FALSE)
result
@

Note that with a different risk/performance measure, the previously computed fmmc objects can be reused.

\bibliography{FA}
\end{document}